## ----------------------------------------------------------------------------
## ..:: Rancher Server installation ::..
## ----------------------------------------------------------------------------

## Installing Rancher Server
- hosts: rke_allnodes
  remote_user: root
  tasks:

    - name: Upgrading all packages to the latest version
      apt:
        update_cache: yes
        upgrade: dist
        
    - name: Remove resolv.conf link
      file:
        path: /etc/resolv.conf
        state: absent

    - name: Copy resolv.conf file
      copy:
        src: resolv.conf
        dest: /etc/resolv.conf

    - name: setting hostname
      template:
        src: hostname.j2
        dest: /etc/hostname

    - name: Enable rc.local
      template:
        src: rc.local.j2
        dest: /etc/rc.local
        mode: '0755'

    - name: Executing /etc/rc.local
      command: /etc/rc.local

    - name: Reboot all RKE Cluster nodes and wait for them to restart
      reboot:
        msg: "Reboot initiated by Ansible"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami

    ## Installing ..:: Docker CE ::..
    ## ------------------------------
    - name: adding Docker apt-key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: adding Docker's APT repository
      apt_repository:
       repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
       state: present
       filename: 'docker-ce'

    - name: installing docker-ce
      apt:
        name: docker-ce
        state: present
        update_cache: true
    
    - name: Adding ububtu user to docker group
      command: usermod -aG docker ubuntu

    - name: Configure Docker to use a self signed certificate with local Registry
      lineinfile: 
        dest: /lib/systemd/system/docker.service
        regexp: '^ExecStart' 
        line: 'ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --insecure-registry registry.f5-udf.com:5000'
        backrefs: yes

    - name: Restart service Docker - Reload files
      command: systemctl daemon-reload

    - name: Restart service Docker
      service:
        name: docker
        state: restarted

## ----------------------------------------------------------------------------
## ..:: DEPLOYING RKE CLUSTER ::..
## ----------------------------------------------------------------------------
- hosts: infra-server
  remote_user: root
  tasks:

    - name: Downloading -rke- executable file
      get_url:
        url: https://github.com/rancher/rke/releases/download/v1.3.2/rke_linux-amd64
        dest: /usr/local/bin/rke
        mode: '0755'

    - name: Creating /home/ubuntu/rke-cluster directory
      file:
        path: /home/ubuntu/rke-cluster
        state: directory
        owner: ubuntu

    - name: Copy cluster.yml file
      copy:
        src: cluster.yml
        dest: /home/ubuntu/rke-cluster/cluster.yml
        owner: ubuntu

    - name: Copy dnsutils.yaml file
      copy:
        src: dnsutils.yaml
        dest: /home/ubuntu/rke-cluster/dnsutils.yaml
        owner: ubuntu

    - name: Deployng the RKE Cluster
      become: true
      become_user: ubuntu
      command: chdir=/home/ubuntu/rke-cluster /bin/bash -c "rke up"

    - name: create .kube directory for user ubuntu on infra-server (Ansible controller)
      local_action:
        module: file
        path: /home/ubuntu/.kube
        state: directory
        mode: 0755
        owner: ubuntu

    - name: Copy kube_config_cluster.yml to ubuntu's .kube directory
      copy:
        src: /home/ubuntu/rke-cluster/kube_config_cluster.yml
        dest: /home/ubuntu/.kube/config-rke
        owner: ubuntu

    - name: Copy kube_config_cluster.yml to ubuntu's .kube directory
      copy:
        src: /home/ubuntu/rke-cluster/kube_config_cluster.yml
        dest: /home/ubuntu/.kube/config
        owner: ubuntu

## ----------------------------------------------------------------------------
## ..:: CALICO OVERLAY NETWORK INSTALLATION ON RKE ::..
## ----------------------------------------------------------------------------

- hosts: infra-server
  become: yes
  remote_user: root
  tasks:

    ## Installing CALICO Overlay network 
    - name: Downloading -Calico- Manifest file
      get_url:
        url: https://docs.projectcalico.org/manifests/calico.yaml
        dest: /home/ubuntu/calico-rke.yaml
        mode: '0644'

    - name: Configure Calico to use 10.244.0.0 POD Network - Step 1
      lineinfile: 
        dest: /home/ubuntu/calico-rke.yaml
        regexp: 'CALICO_IPV4POOL_CIDR' 
        line: '            - name: CALICO_IPV4POOL_CIDR'
        backrefs: yes

    - name: Configure Calico to use 10.244.0.0 POD Network - Step 2
      lineinfile: 
        dest: /home/ubuntu/calico-rke.yaml
        regexp: '192.168.0.0/16' 
        line: '              value: "10.244.0.0/16"'
        backrefs: yes

    - name: Apply Calico Overlay Networking Configuration
      become: true
      become_user: ubuntu
      command: /bin/bash -c "export KUBECONFIG=/home/ubuntu/.kube/config-rke ; kubectl apply -f ~/calico-rke.yaml"

    ## Configuring CALICO for BGP with BIG-IP
    - name: Creating /etc/calico directory
      file:
        path: /etc/calico
        state: directory

    - name: Downloading calicoctl executable installation file 
      get_url:
        url: https://github.com/projectcalico/calicoctl/releases/download/v3.18.6/calicoctl
        dest: /usr/local/bin
        mode: '0755'
 
    - name: Copy calico configuration files  
      copy:
        src: rke-manifests/calico-overlay/{{ item }}
        dest: /etc/calico/
      with_items:
        - calicoctl-rke.cfg
        - bgpConfiguration-rke.yaml

    - name: Copying BIGIP BGP Peer configuration file
      template:
        src: bigipPeerConfiguration-rke.yaml.j2
        dest: /etc/calico/bigipPeerConfiguration-rke.yaml

    - name: Configuring Calico BGP on k8s cluster
      become: yes
      become_user: ubuntu
      command: calicoctl create -c /etc/calico/calicoctl-rke.cfg  -f /etc/calico/bgpConfiguration-rke.yaml

    - name: Adding BGIP bigip-security as a BGPPeer
      become: yes
      become_user: ubuntu
      command: calicoctl create -c /etc/calico/calicoctl-rke.cfg -f /etc/calico/bigipPeerConfiguration-rke.yaml